{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Test/my-app/core/store/toggleTheme.tsx"],"sourcesContent":["import { persist } from 'zustand/middleware'\r\nimport { create } from 'zustand/react'\r\n\r\ninterface IToggleTheme {\r\n\tdarkMode: boolean\r\n\tsetDark: () => void\r\n\tsetWhite: () => void\r\n}\r\n\r\nexport const toggleTheme = create<IToggleTheme>()(\r\n\tpersist(\r\n\t\tset => ({\r\n\t\t\tdarkMode: true,\r\n\t\t\tsetDark: () => {\r\n\t\t\t\tset(() => ({ darkMode: false }))\r\n\t\t\t},\r\n\t\t\tsetWhite: () => {\r\n\t\t\t\tset(() => ({ darkMode: true }))\r\n\t\t\t},\r\n\t\t}),\r\n\t\t{\r\n\t\t\tname: 'setTheme',\r\n\t\t}\r\n\t)\r\n)\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAQO,MAAM,cAAc,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,IAC/B,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,EACL,CAAA,MAAO,CAAC;QACP,UAAU;QACV,SAAS;YACR,IAAI,IAAM,CAAC;oBAAE,UAAU;gBAAM,CAAC;QAC/B;QACA,UAAU;YACT,IAAI,IAAM,CAAC;oBAAE,UAAU;gBAAK,CAAC;QAC9B;IACD,CAAC,GACD;IACC,MAAM;AACP","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Test/my-app/core/api/theme.tsx"],"sourcesContent":["'use client'\r\n\r\nimport '../../app/globals.css'\r\nimport { toggleTheme } from '../store/toggleTheme'\r\n\r\nexport default function GetTheme({children}) {\r\n\tconst data = toggleTheme((state) => state.darkMode)\r\n\t\r\n\treturn (\r\n\t\t<body className={`${data ? 'white' : 'dark'} antialiased`}>\r\n\t\t\t{children}\r\n\t\t</body>\r\n\t)\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;;AAKe,SAAS,SAAS,EAAC,QAAQ,EAAC;IAC1C,MAAM,OAAO,CAAA,GAAA,gIAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,QAAQ;IAElD,qBACC,6LAAC;QAAK,WAAW,GAAG,OAAO,UAAU,OAAO,YAAY,CAAC;kBACvD;;;;;;AAGJ;KARwB","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Test/my-app/core/provider/QueryProvider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport {QueryClient, QueryClientProvider} from \"@tanstack/react-query\";\r\nimport React, {useState} from \"react\";\r\n\r\ntype TProps = {\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function QueryProvider({children}:TProps) {\r\n    const [queryClient] = useState(() => new QueryClient())\r\n\r\n    return <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\r\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;;;AAHA;;;AASe,SAAS,cAAc,EAAC,QAAQ,EAAQ;;IACnD,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;kCAAE,IAAM,IAAI,gLAAA,CAAA,cAAW;;IAEpD,qBAAO,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAAc;;;;;;AACtD;GAJwB;KAAA","debugId":null}}]
}